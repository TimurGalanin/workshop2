pipeline {
    agent any
       parameters {
               string(
			name: 'CODE_REPO',
			defaultValue: 'git@github.com:RoboInterativo/back-front-example.git',
			description: 'CODE_REPO'
		)
		 string(
			name: 'BRANCH',
			defaultValue: 'main',
			description: 'BRANCH'
		)


    }



    stages {
        stage('Stage 1') {
            steps {
                //println WORKSPACE
                //echo 'Hello world! ${CODE_REPO} ${BRANCH}'

                sh 'pwd && hostname'
                sh 'rm -rf code'
              //  sh 'apt update && apt install -y zip unzip'
                sh 'curl https://nodejs.org/dist/v14.17.2/node-v14.17.2-linux-x64.tar.xz -o node.tar.xz && tar xvf node.tar.xz && ls -li'

                checkout([$class: 'GitSCM', branches: [[name: '${BRANCH}']],
                doGenerateSubmoduleConfigurations: false,
                extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'code/']],
                gitTool: 'Default',
                submoduleCfg: [],  userRemoteConfigs: [[credentialsId: 'ssh-git', url: '${CODE_REPO}']]])
                sh 'ls -li code '
                sh 'export PATH=$PATH:`pwd`/node-v14.17.2-linux-x64/bin && cd ${WORKSPACE}/code/front2 && ls -li && node -v &&  npm install && npm run build'
                sh 'pwd && cd code/front2/dist  &&  zip rel.zip index.html main.js'
                     //userRemoteConfigs: [[credentialsId: 'git-ssh'

            }
        }
        stage('Stage 2') {
            steps {
              script{
              sh "echo ${WORKSPACE}"
              def ENV="dev"
              ansiblePlaybook extras: "-vv --extra-vars \" CODE_REPO=${GIT_REPO} BRANCH=master  ENV=dev inventory_dir=\"${WORKSPACE}/ansible/inventories/${ENV}/\"\" ", installation: 'ansible25', inventory: "ansible/inventories/${ENV}/hosts", playbook: "ansible/playbooks/test.yml"
                }
              }
             }
    }
    post {
        success {

            archiveArtifacts allowEmptyArchive: true, artifacts: 'code/front2/dist/*.zip', fingerprint: true

        }
      }
}
